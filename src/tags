!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACLOCAL	Makefile	/^ACLOCAL = ${SHELL} \/home\/licg\/workspace\/learn\/transfer\/missing aclocal-1.15$/;"	m
ACLOCAL_M4	Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
AMTAR	Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AM_DEFAULT_VERBOSITY	Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_V_CC	Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CCLD	Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_GEN	Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_P	Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_at	Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_lt	Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AR	Makefile	/^AR = ar$/;"	m
AUTOCONF	Makefile	/^AUTOCONF = ${SHELL} \/home\/licg\/workspace\/learn\/transfer\/missing autoconf$/;"	m
AUTOHEADER	Makefile	/^AUTOHEADER = ${SHELL} \/home\/licg\/workspace\/learn\/transfer\/missing autoheader$/;"	m
AUTOMAKE	Makefile	/^AUTOMAKE = ${SHELL} \/home\/licg\/workspace\/learn\/transfer\/missing automake-1.15$/;"	m
AWK	Makefile	/^AWK = gawk$/;"	m
CC	Makefile	/^CC = gcc$/;"	m
CCDEPMODE	Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCLD	Makefile	/^CCLD = $(CC)$/;"	m
CFLAGS	Makefile	/^CFLAGS = -g -O0$/;"	m
COMPILE	Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
CONFIG_CLEAN_FILES	Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_HEADER	Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CPP	Makefile	/^CPP = gcc -E$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = $/;"	m
CTAGS	Makefile	/^CTAGS = ctags$/;"	m
CXX	Makefile	/^CXX = g++$/;"	m
CXXCPP	Makefile	/^CXXCPP = g++ -E$/;"	m
CXXDEPMODE	Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS = -g -O2$/;"	m
CYGPATH_W	Makefile	/^CYGPATH_W = echo$/;"	m
DEFAULT_INCLUDES	Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFS	Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEPDIR	Makefile	/^DEPDIR = .deps$/;"	m
DISTFILES	Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_COMMON	Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(am__DIST_COMMON)$/;"	m
DIST_SOURCES	Makefile	/^DIST_SOURCES = $(transfer_SOURCES)$/;"	m
DLLTOOL	Makefile	/^DLLTOOL = false$/;"	m
DSYMUTIL	Makefile	/^DSYMUTIL = $/;"	m
DUMPBIN	Makefile	/^DUMPBIN = $/;"	m
ECHO_C	Makefile	/^ECHO_C = $/;"	m
ECHO_N	Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	Makefile	/^ECHO_T = $/;"	m
EGREP	Makefile	/^EGREP = \/bin\/grep -E$/;"	m
ETAGS	Makefile	/^ETAGS = etags$/;"	m
EVENT_INTERNAL_DECREF	event_pool.c	11;"	d	file:
EVENT_INTERNAL_INCREF	event_pool.c	10;"	d	file:
EVENT_INTERNAL_RELEASE	event_pool.c	12;"	d	file:
EVENT_POOL_NAME_MAX	event_pool.h	6;"	d
EXEEXT	Makefile	/^EXEEXT = $/;"	m
FGREP	Makefile	/^FGREP = \/bin\/grep -F$/;"	m
GLIB_CFLAG	Makefile	/^GLIB_CFLAG = -I$(top_srcdir)\/libs\/glib-2.58.1\/ -I$(top_srcdir)\/libs\/glib-2.58.1\/glib -I$(top_srcdir)\/libs\/glib-2.58.1\/gmodule$/;"	m
GLIB_LDFLAG	Makefile	/^GLIB_LDFLAG = -L$(top_srcdir)\/libs\/glib-2.58.1\/glib -L\/$(top_srcdir)\/libs\/glib-2.58.1\/gmodule$/;"	m
GLIB_LIB	Makefile	/^GLIB_LIB = -lglib-2.0 -lgmodule-2.0$/;"	m
GREP	Makefile	/^GREP = \/bin\/grep$/;"	m
INSTALL	Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
JANSSON_CFLAG	Makefile	/^JANSSON_CFLAG = -I$(top_srcdir)\/libs\/jansson-2.11\/src$/;"	m
JANSSON_LDFLAG	Makefile	/^JANSSON_LDFLAG = -L$(top_srcdir)\/libs\/jansson-2.11\/src$/;"	m
JANSSON_LIB	Makefile	/^JANSSON_LIB = -ljansson$/;"	m
LANG_CN	server.h	/^    LANG_CN,$/;"	e	enum:__anon3
LANG_EN	server.h	/^    LANG_EN$/;"	e	enum:__anon3
LANG_TYPE	server.h	/^}LANG_TYPE;$/;"	t	typeref:enum:__anon3
LD	Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = $/;"	m
LIBOBJS	Makefile	/^LIBOBJS = $/;"	m
LIBS	Makefile	/^LIBS = $/;"	m
LIBTOOL	Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LINK	Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LIPO	Makefile	/^LIPO = $/;"	m
LN_S	Makefile	/^LN_S = ln -s$/;"	m
LOG_ACCEPT	log.h	/^    LOG_ACCEPT,$/;"	e	enum:__anon1
LOG_EVENT_POOL	log.h	/^    LOG_EVENT_POOL,$/;"	e	enum:__anon1
LOG_INIT	log.h	/^    LOG_INIT,$/;"	e	enum:__anon1
LOG_MAX	log.h	/^    LOG_MAX,$/;"	e	enum:__anon1
LOG_PARSE_VA_ARGS	log.h	6;"	d
LOG_PROCESS	log.h	/^    LOG_PROCESS,$/;"	e	enum:__anon1
LOG_ROUTER	log.h	/^    LOG_ROUTER,$/;"	e	enum:__anon1
LOG_SHOW_TIME	log.h	/^    LOG_SHOW_TIME,$/;"	e	enum:__anon1
LOG_TRANSLATE	log.h	/^    LOG_TRANSLATE,$/;"	e	enum:__anon1
LOG_TYPE	log.h	/^}LOG_TYPE;$/;"	t	typeref:enum:__anon1
LOG_TYPES_NAME_MAX	log.h	27;"	d
LTCOMPILE	Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTLIBOBJS	Makefile	/^LTLIBOBJS = $/;"	m
LT_SYS_LIBRARY_PATH	Makefile	/^LT_SYS_LIBRARY_PATH = $/;"	m
MAKEINFO	Makefile	/^MAKEINFO = ${SHELL} \/home\/licg\/workspace\/learn\/transfer\/missing makeinfo$/;"	m
MANIFEST_TOOL	Makefile	/^MANIFEST_TOOL = :$/;"	m
MKDIR_P	Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
NM	Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NMEDIT	Makefile	/^NMEDIT = $/;"	m
NORMAL_INSTALL	Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	Makefile	/^NORMAL_UNINSTALL = :$/;"	m
OBJDUMP	Makefile	/^OBJDUMP = objdump$/;"	m
OBJEXT	Makefile	/^OBJEXT = o$/;"	m
OTOOL	Makefile	/^OTOOL = $/;"	m
OTOOL64	Makefile	/^OTOOL64 = $/;"	m
PACKAGE	Makefile	/^PACKAGE = transfer$/;"	m
PACKAGE_BUGREPORT	Makefile	/^PACKAGE_BUGREPORT = transfer@bug.com$/;"	m
PACKAGE_NAME	Makefile	/^PACKAGE_NAME = transfer$/;"	m
PACKAGE_STRING	Makefile	/^PACKAGE_STRING = transfer 1.0$/;"	m
PACKAGE_TARNAME	Makefile	/^PACKAGE_TARNAME = transfer$/;"	m
PACKAGE_URL	Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_VERSION	Makefile	/^PACKAGE_VERSION = 1.0$/;"	m
PATH_SEPARATOR	Makefile	/^PATH_SEPARATOR = :$/;"	m
POST_INSTALL	Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	Makefile	/^POST_UNINSTALL = :$/;"	m
PRE_INSTALL	Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	Makefile	/^PRE_UNINSTALL = :$/;"	m
PROCESS_CMD_LIST	process.h	/^    PROCESS_CMD_LIST,$/;"	e	enum:__anon2
PROCESS_CMD_REGISTER	process.h	/^    PROCESS_CMD_REGISTER = 0x01,$/;"	e	enum:__anon2
PROCESS_CMD_RET	process.h	/^    PROCESS_CMD_RET,$/;"	e	enum:__anon2
PROCESS_CMD_SEND	process.h	/^    PROCESS_CMD_SEND,$/;"	e	enum:__anon2
PROCESS_CMD_TYPE	process.h	/^}PROCESS_CMD_TYPE;$/;"	t	typeref:enum:__anon2
PROCESS_RET_MSG_MAX	process.c	7;"	d	file:
PROGRAMS	Makefile	/^PROGRAMS = $(bin_PROGRAMS)$/;"	m
RANLIB	Makefile	/^RANLIB = ranlib$/;"	m
ROUTER_TABLE_DEAD_TIME	router.c	5;"	d	file:
ROUTER_TABLE_SCAN_TIME	router.c	6;"	d	file:
ROUTER_USER_NAME_MAX	router.h	10;"	d
SED	Makefile	/^SED = \/bin\/sed$/;"	m
SERVER_CLINET_QUE_MAX	main.c	20;"	d	file:
SERVER_PORT	main.c	19;"	d	file:
SET_MAKE	Makefile	/^SET_MAKE = $/;"	m
SHELL	Makefile	/^SHELL = \/bin\/bash$/;"	m
SOURCES	Makefile	/^SOURCES = $(transfer_SOURCES)$/;"	m
STRIP	Makefile	/^STRIP = strip$/;"	m
VERSION	Makefile	/^VERSION = 1.0$/;"	m
ZEBRA_CFLAG	Makefile	/^ZEBRA_CFLAG = -I$(top_srcdir)\/libs\/zebra\/src$/;"	m
ZEBRA_LDFLAG	Makefile	/^ZEBRA_LDFLAG = -L$(top_srcdir)\/libs\/zebra$/;"	m
ZEBRA_LIB	Makefile	/^ZEBRA_LIB = -lzebra$/;"	m
_	server.h	17;"	d
_EVENT_POOL_H_	event_pool.h	2;"	d
_LOG_H_	log.h	2;"	d
_PROCESS_H_	process.h	2;"	d
_ROUTER_MAIN_H_	router.h	2;"	d
_SERVER_H_	server.h	2;"	d
abs_builddir	Makefile	/^abs_builddir = \/home\/licg\/workspace\/learn\/transfer\/src$/;"	m
abs_srcdir	Makefile	/^abs_srcdir = \/home\/licg\/workspace\/learn\/transfer\/src$/;"	m
abs_top_builddir	Makefile	/^abs_top_builddir = \/home\/licg\/workspace\/learn\/transfer$/;"	m
abs_top_srcdir	Makefile	/^abs_top_srcdir = \/home\/licg\/workspace\/learn\/transfer$/;"	m
ac_ct_AR	Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_CC	Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CXX	Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_DUMPBIN	Makefile	/^ac_ct_DUMPBIN = $/;"	m
active	router.h	/^    gboolean active;$/;"	m	struct:router_node
am__DEPENDENCIES_1	Makefile	/^am__DEPENDENCIES_1 =$/;"	m
am__DIST_COMMON	Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in $(top_srcdir)\/depcomp$/;"	m
am__aclocal_m4_deps	Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/libtool.m4 \\$/;"	m
am__can_run_installinfo	Makefile	/^am__can_run_installinfo = \\$/;"	m
am__cd	Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__configure_deps	Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__define_uniq_tagged_files	Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__depfiles_maybe	Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__include	Makefile	/^am__include = include$/;"	m
am__installdirs	Makefile	/^am__installdirs = "$(DESTDIR)$(bindir)"$/;"	m
am__is_gnu_make	Makefile	/^am__is_gnu_make = { \\$/;"	m
am__leading_dot	Makefile	/^am__leading_dot = .$/;"	m
am__make_dryrun	Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_running_with_option	Makefile	/^am__make_running_with_option = \\$/;"	m
am__mv	Makefile	/^am__mv = mv -f$/;"	m
am__quote	Makefile	/^am__quote = $/;"	m
am__tagged_files	Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tar	Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__uniquify_input	Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__untar	Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__v_CCLD_	Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_0	Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_1	Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CC_	Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_0	Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_1	Makefile	/^am__v_CC_1 = $/;"	m
am__v_GEN_	Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_0	Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_1	Makefile	/^am__v_GEN_1 = $/;"	m
am__v_P_	Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_0	Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_1	Makefile	/^am__v_P_1 = :$/;"	m
am__v_at_	Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_0	Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_1	Makefile	/^am__v_at_1 = $/;"	m
am__v_lt_	Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_0	Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_1	Makefile	/^am__v_lt_1 = $/;"	m
am_transfer_OBJECTS	Makefile	/^am_transfer_OBJECTS = transfer-main.$(OBJEXT) \\$/;"	m
bin_PROGRAMS	Makefile	/^bin_PROGRAMS = transfer$(EXEEXT)$/;"	m
bindir	Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
build	Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build_alias	Makefile	/^build_alias = $/;"	m
build_cpu	Makefile	/^build_cpu = x86_64$/;"	m
build_os	Makefile	/^build_os = linux-gnu$/;"	m
build_triplet	Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_vendor	Makefile	/^build_vendor = pc$/;"	m
builddir	Makefile	/^builddir = .$/;"	m
datadir	Makefile	/^datadir = ${datarootdir}$/;"	m
datarootdir	Makefile	/^datarootdir = ${prefix}\/share$/;"	m
depcomp	Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
docdir	Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
dvidir	Makefile	/^dvidir = ${docdir}$/;"	m
ep	event_pool.h	/^    struct event_loop *ep;$/;"	m	struct:fd_source	typeref:struct:fd_source::event_loop
event_cb	event_pool.h	/^    GSourceFunc event_cb;$/;"	m	struct:event_pool
event_loop	event_pool.h	/^struct event_loop{$/;"	s
event_pool	event_pool.h	/^struct event_pool {$/;"	s
event_pool_attach	event_pool.c	/^void event_pool_attach(struct event_pool *pool, int fd)$/;"	f
event_pool_cb	main.c	/^static gboolean event_pool_cb(GIOChannel *io, GIOCondition con, void *user_data)$/;"	f	file:
event_pool_dettach	event_pool.c	/^void event_pool_dettach(int fd)$/;"	f
event_pool_fd_source_destory	event_pool.c	/^static void event_pool_fd_source_destory(struct fd_source *fs)$/;"	f	file:
event_pool_hash_table_key_destory	event_pool.c	/^static void event_pool_hash_table_key_destory(void *key)$/;"	f	file:
event_pool_hash_table_val_destory	event_pool.c	/^static void event_pool_hash_table_val_destory(void *val)$/;"	f	file:
event_pool_new	event_pool.c	/^struct event_pool *event_pool_new(char *name, GSourceFunc event_cb, void *data, guint32 max_event, guint32 max_thread)$/;"	f
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
fd_source	event_pool.h	/^struct fd_source {$/;"	s
fs	router.h	/^    struct fd_source *fs;$/;"	m	struct:router_node	typeref:struct:router_node::fd_source
g_log_level	log.c	/^static guint32 g_log_level = 0;$/;"	v	file:
g_loop_list	main.c	/^static GList *g_loop_list = NULL;$/;"	v	file:
g_thread_list	main.c	/^static GList *g_thread_list = NULL;$/;"	v	file:
host	Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host_alias	Makefile	/^host_alias = $/;"	m
host_cpu	Makefile	/^host_cpu = x86_64$/;"	m
host_os	Makefile	/^host_os = linux-gnu$/;"	m
host_triplet	Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_vendor	Makefile	/^host_vendor = pc$/;"	m
htmldir	Makefile	/^htmldir = ${docdir}$/;"	m
includedir	Makefile	/^includedir = ${prefix}\/include$/;"	m
infodir	Makefile	/^infodir = ${datarootdir}\/info$/;"	m
install_sh	Makefile	/^install_sh = ${SHELL} \/home\/licg\/workspace\/learn\/transfer\/install-sh$/;"	m
install_sh_DATA	Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
io	event_pool.h	/^    GIOChannel *io;$/;"	m	struct:fd_source
is_log_type_enabled	log.c	/^gboolean is_log_type_enabled(LOG_TYPE level)$/;"	f
last_update	router.h	/^    GTimer *last_update;$/;"	m	struct:router_node
len	event_pool.h	/^    guint32 len;$/;"	m	struct:event_loop
libdir	Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
localedir	Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localstatedir	Makefile	/^localstatedir = ${prefix}\/var$/;"	m
log2name	log.c	/^char *log2name(LOG_TYPE type)$/;"	f
log_disable	log.c	/^void log_disable(LOG_TYPE level)$/;"	f
log_enable	log.c	/^void log_enable(LOG_TYPE level)$/;"	f
log_error	log.c	/^void log_error(LOG_TYPE level, const char *fmt, ...)$/;"	f
log_error_handler	log.h	30;"	d
log_get_type_max	log.c	/^guint32 log_get_type_max()$/;"	f
log_init	log.c	/^gboolean log_init(GError **error)$/;"	f
log_message	log.c	/^void log_message(LOG_TYPE level, const char *fmt, ...)$/;"	f
log_name_add	log.c	10;"	d	file:
log_types_name	log.c	/^static char log_types_name[LOG_MAX][LOG_TYPES_NAME_MAX+1];$/;"	v	file:
log_warning	log.c	/^void log_warning(LOG_TYPE level, const char *fmt, ...)$/;"	f
log_warning_handler	log.h	33;"	d
loop	event_pool.h	/^    GMainLoop *loop;$/;"	m	struct:event_loop
loop_list_exit	main.c	/^static void loop_list_exit(void *data)$/;"	f	file:
m_main_loop_new	main.c	/^GMainLoop *m_main_loop_new(GMainContext *context)$/;"	f
m_thread_new	main.c	/^GThread *m_thread_new(const gchar *name, GThreadFunc func, gpointer data)$/;"	f
main	main.c	/^int main(int argc, char *argv[])$/;"	f
main_event	event_pool.c	/^static void *main_event(void *arg)$/;"	f	file:
mandir	Makefile	/^mandir = ${datarootdir}\/man$/;"	m
max_event	event_pool.h	/^    guint32 max_event;$/;"	m	struct:event_pool
max_thread	event_pool.h	/^    guint32 max_thread;$/;"	m	struct:event_pool
mkdir_p	Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkinstalldirs	Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
name	event_pool.h	/^    char name[EVENT_POOL_NAME_MAX];$/;"	m	struct:event_pool
oldincludedir	Makefile	/^oldincludedir = \/usr\/include$/;"	m
pdfdir	Makefile	/^pdfdir = ${docdir}$/;"	m
pkgdatadir	Makefile	/^pkgdatadir = $(datadir)\/transfer$/;"	m
pkgincludedir	Makefile	/^pkgincludedir = $(includedir)\/transfer$/;"	m
pkglibdir	Makefile	/^pkglibdir = $(libdir)\/transfer$/;"	m
pkglibexecdir	Makefile	/^pkglibexecdir = $(libexecdir)\/transfer$/;"	m
pool	event_pool.h	/^    struct event_pool *pool;$/;"	m	struct:event_loop	typeref:struct:event_loop::event_pool
prefix	Makefile	/^prefix = \/usr\/local$/;"	m
process_cmd_list	process.c	/^static void process_cmd_list(struct router_node *node, int id, json_t *param_t)$/;"	f	file:
process_cmd_register	process.c	/^static void process_cmd_register(struct router_node *node, int id, json_t *param_t)$/;"	f	file:
process_cmd_send	process.c	/^static void process_cmd_send(struct router_node *node, int id, json_t *param_t)$/;"	f	file:
process_dispatcher	process.c	/^void process_dispatcher(GIOChannel *io, char *data)$/;"	f
process_send_return	process.c	/^static void process_send_return(int fd, int id, char *err_msg)$/;"	f	file:
process_write	process.c	/^static gsize process_write(int fd, char *fmt, ...)$/;"	f	file:
program_transform_name	Makefile	/^program_transform_name = s,x,x,$/;"	m
psdir	Makefile	/^psdir = ${docdir}$/;"	m
register_table	router.c	/^static GHashTable *register_table = NULL;$/;"	v	file:
register_table_add	router.c	/^gboolean register_table_add(void *key, void *val)$/;"	f
register_table_find_by_key	router.c	/^void *register_table_find_by_key(void *key)$/;"	f
register_table_get_keys_as_array	router.c	/^void **register_table_get_keys_as_array(guint *len)$/;"	f
register_table_key_exist	router.c	/^gboolean register_table_key_exist(void *key)$/;"	f
register_table_remove	router.c	/^void register_table_remove(void *key)$/;"	f
router_add	router.c	/^gboolean router_add(void *key, void *node)$/;"	f
router_find_node_by_key	router.c	/^void *router_find_node_by_key(void *key)$/;"	f
router_key_destory_func	router.c	/^static void router_key_destory_func(void *data)$/;"	f	file:
router_main	router.c	/^void *router_main(void *arg)$/;"	f
router_node	router.h	/^struct router_node {$/;"	s
router_node_new	router.c	/^void *router_node_new(void *fs)$/;"	f
router_table	router.c	/^GHashTable *router_table = NULL;$/;"	v
router_table_dead_cb	router.c	/^static void router_table_dead_cb(void *val, void *user_data)$/;"	f	file:
router_val_destory_func	router.c	/^static void router_val_destory_func(void *data)$/;"	f	file:
runstatedir	Makefile	/^runstatedir = ${localstatedir}\/run$/;"	m
sbindir	Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
server_accept_cb	main.c	/^static int server_accept_cb(GIOChannel *io, GIOCondition cond, void *user_data)$/;"	f	file:
server_exit	main.c	/^void server_exit(void)$/;"	f
sharedstatedir	Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sigint_cb	main.c	/^static int sigint_cb(gpointer user_data)$/;"	f	file:
src	event_pool.h	/^    GSource *src;$/;"	m	struct:fd_source
srcdir	Makefile	/^srcdir = .$/;"	m
subdir	Makefile	/^subdir = src$/;"	m
subdirs	Makefile	/^subdirs =  libs\/jansson-2.11$/;"	m
subdirs_extra	Makefile	/^subdirs_extra =  libs\/libevent-2.1.8 libs\/zlib-1.2.11 libs\/ncurses-6.1 libs\/glib-2.58.1$/;"	m
sysconfdir	Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
target_alias	Makefile	/^target_alias = $/;"	m
thr_table	event_pool.h	/^    GHashTable *thr_table;$/;"	m	struct:event_pool
thr_table_cb	event_pool.c	/^static gboolean thr_table_cb(void *key, void *val, void *user_data)$/;"	f	file:
thread_list_exit	main.c	/^static void thread_list_exit(void *data)$/;"	f	file:
timeout_cb	router.c	/^static gboolean timeout_cb(void *data)$/;"	f	file:
top_build_prefix	Makefile	/^top_build_prefix = ..\/$/;"	m
top_builddir	Makefile	/^top_builddir = ..$/;"	m
top_srcdir	Makefile	/^top_srcdir = ..$/;"	m
transfer_CFLAGS	Makefile	/^transfer_CFLAGS = $(JANSSON_CFLAG)  $(CCAN_CFLAG)  $(LIBEVENT_CFLAG) $(LIBOPENSSL_CFLAG) $(ZLIB_CFLAG) $(NCURSES_CFLAG) $(ZEBRA_CFLAG) $(GLIB_CFLAG)$/;"	m
transfer_DEPENDENCIES	Makefile	/^transfer_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \\$/;"	m
transfer_LDADD	Makefile	/^transfer_LDADD = $(JANSSON_LIB)   $(CCAN_LIB)   $(LIBEVENT_LIB) $(LIBOPENSSL_LIB) $(ZLIB_LIB) $(NCURSES_LIB) $(ZEBRA_LIB) $(GLIB_LIB)$/;"	m
transfer_LDFLAGS	Makefile	/^transfer_LDFLAGS = $(JANSSON_LDFLAG) $(CCAN_LDFLAG) $(LIBEVENT_LDFLAG) $(LIBOPENSSL_LDFLAG) $(ZLIB_LDFLAG) $(NCURSES_LDFLAG) -no-install $(ZEBRA_LDFLAG) $(GLIB_LDFLAG)$/;"	m
transfer_LINK	Makefile	/^transfer_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
transfer_OBJECTS	Makefile	/^transfer_OBJECTS = $(am_transfer_OBJECTS)$/;"	m
transfer_SOURCES	Makefile	/^transfer_SOURCES = main.c router.c log.c event_pool.c process.c$/;"	m
transform	Makefile	/^transform = $(program_transform_name)$/;"	m
translate_init	main.c	/^gboolean translate_init(LANG_TYPE type)$/;"	f
user_data	event_pool.h	/^    void *user_data;$/;"	m	struct:event_pool
user_name	router.h	/^    char user_name[ROUTER_USER_NAME_MAX];$/;"	m	struct:router_node
