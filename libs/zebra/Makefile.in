# Makefile.in generated by automake 1.16 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
subdir = libs/zebra
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/m4_ax_subdirs_configure.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(include_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libzebra_la_DEPENDENCIES =
am__dirstamp = $(am__leading_dot)dirstamp
am_libzebra_la_OBJECTS = lib/libzebra_la-agentx.lo \
	lib/libzebra_la-buffer.lo lib/libzebra_la-checksum.lo \
	lib/libzebra_la-command.lo lib/libzebra_la-daemon.lo \
	lib/libzebra_la-distribute.lo lib/libzebra_la-filter.lo \
	lib/libzebra_la-getopt1.lo lib/libzebra_la-getopt.lo \
	lib/libzebra_la-hash.lo lib/libzebra_la-if.lo \
	lib/libzebra_la-if_rmap.lo lib/libzebra_la-jhash.lo \
	lib/libzebra_la-keychain.lo lib/libzebra_la-linklist.lo \
	lib/libzebra_la-log.lo lib/libzebra_la-md5.lo \
	lib/libzebra_la-memory.lo lib/libzebra_la-memtypes.lo \
	lib/libzebra_la-network.lo lib/libzebra_la-pid_output.lo \
	lib/libzebra_la-plist.lo lib/libzebra_la-pqueue.lo \
	lib/libzebra_la-prefix.lo lib/libzebra_la-privs.lo \
	lib/libzebra_la-regex.lo lib/libzebra_la-routemap.lo \
	lib/libzebra_la-sigevent.lo lib/libzebra_la-smux.lo \
	lib/libzebra_la-snmp.lo lib/libzebra_la-sockopt.lo \
	lib/libzebra_la-sockunion.lo lib/libzebra_la-str.lo \
	lib/libzebra_la-stream.lo lib/libzebra_la-table.lo \
	lib/libzebra_la-thread.lo lib/libzebra_la-vector.lo \
	lib/libzebra_la-vty.lo lib/libzebra_la-workqueue.lo \
	lib/libzebra_la-zclient.lo src/libzebra_la-main.lo \
	src/libzebra_la-zebra_router_cmd.lo
libzebra_la_OBJECTS = $(am_libzebra_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
libzebra_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libzebra_la_CFLAGS) \
	$(CFLAGS) $(libzebra_la_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = lib/$(DEPDIR)/libzebra_la-agentx.Plo \
	lib/$(DEPDIR)/libzebra_la-buffer.Plo \
	lib/$(DEPDIR)/libzebra_la-checksum.Plo \
	lib/$(DEPDIR)/libzebra_la-command.Plo \
	lib/$(DEPDIR)/libzebra_la-daemon.Plo \
	lib/$(DEPDIR)/libzebra_la-distribute.Plo \
	lib/$(DEPDIR)/libzebra_la-filter.Plo \
	lib/$(DEPDIR)/libzebra_la-getopt.Plo \
	lib/$(DEPDIR)/libzebra_la-getopt1.Plo \
	lib/$(DEPDIR)/libzebra_la-hash.Plo \
	lib/$(DEPDIR)/libzebra_la-if.Plo \
	lib/$(DEPDIR)/libzebra_la-if_rmap.Plo \
	lib/$(DEPDIR)/libzebra_la-jhash.Plo \
	lib/$(DEPDIR)/libzebra_la-keychain.Plo \
	lib/$(DEPDIR)/libzebra_la-linklist.Plo \
	lib/$(DEPDIR)/libzebra_la-log.Plo \
	lib/$(DEPDIR)/libzebra_la-md5.Plo \
	lib/$(DEPDIR)/libzebra_la-memory.Plo \
	lib/$(DEPDIR)/libzebra_la-memtypes.Plo \
	lib/$(DEPDIR)/libzebra_la-network.Plo \
	lib/$(DEPDIR)/libzebra_la-pid_output.Plo \
	lib/$(DEPDIR)/libzebra_la-plist.Plo \
	lib/$(DEPDIR)/libzebra_la-pqueue.Plo \
	lib/$(DEPDIR)/libzebra_la-prefix.Plo \
	lib/$(DEPDIR)/libzebra_la-privs.Plo \
	lib/$(DEPDIR)/libzebra_la-regex.Plo \
	lib/$(DEPDIR)/libzebra_la-routemap.Plo \
	lib/$(DEPDIR)/libzebra_la-sigevent.Plo \
	lib/$(DEPDIR)/libzebra_la-smux.Plo \
	lib/$(DEPDIR)/libzebra_la-snmp.Plo \
	lib/$(DEPDIR)/libzebra_la-sockopt.Plo \
	lib/$(DEPDIR)/libzebra_la-sockunion.Plo \
	lib/$(DEPDIR)/libzebra_la-str.Plo \
	lib/$(DEPDIR)/libzebra_la-stream.Plo \
	lib/$(DEPDIR)/libzebra_la-table.Plo \
	lib/$(DEPDIR)/libzebra_la-thread.Plo \
	lib/$(DEPDIR)/libzebra_la-vector.Plo \
	lib/$(DEPDIR)/libzebra_la-vty.Plo \
	lib/$(DEPDIR)/libzebra_la-workqueue.Plo \
	lib/$(DEPDIR)/libzebra_la-zclient.Plo \
	src/$(DEPDIR)/libzebra_la-main.Plo \
	src/$(DEPDIR)/libzebra_la-zebra_router_cmd.Plo
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libzebra_la_SOURCES)
DIST_SOURCES = $(libzebra_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(includedir)"
HEADERS = $(include_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
subdirs_extra = @subdirs_extra@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
noinst_LTLIBRARIES = libzebra.la
include_HEADERS = src/libzebra.h config.h\
				  lib/log.h lib/pqueue.h lib/sockopt.h lib/zassert.h lib/network.h lib/if.h\
				  lib/jhash.h lib/smux.h lib/filter.h lib/queue.h lib/privs.h lib/if_rmap.h\
				  lib/memory.h lib/vty.h lib/libospf.h lib/zclient.h lib/md5.h lib/hash.h\
				  lib/regex-gnu.h lib/stream.h lib/getopt.h lib/thread.h lib/sockunion.h lib/command.h\
				  lib/route_types.h lib/prefix.h lib/routemap.h lib/str.h lib/keychain.h lib/memtypes.h\
				  lib/checksum.h lib/buffer.h lib/plist.h lib/distribute.h lib/table.h lib/vector.h\
				  lib/sigevent.h lib/version.h lib/workqueue.h lib/zebra.h lib/linklist.h zebra/rib.h\
				  zebra/zserv.h fpm/fpm.h src/zebra_router_cmd.h

libzebra_la_SOURCES = lib/agentx.c lib/buffer.c lib/checksum.c lib/command.c lib/daemon.c lib/distribute.c lib/filter.c\
					  lib/getopt1.c lib/getopt.c lib/hash.c lib/if.c lib/if_rmap.c lib/jhash.c lib/keychain.c\
					  lib/linklist.c lib/log.c lib/md5.c lib/memory.c lib/memtypes.c lib/network.c lib/pid_output.c\
					  lib/plist.c lib/pqueue.c lib/prefix.c lib/privs.c lib/regex.c lib/routemap.c lib/sigevent.c\
					  lib/smux.c lib/snmp.c lib/sockopt.c lib/sockunion.c lib/str.c lib/stream.c lib/table.c lib/thread.c\
					  lib/vector.c lib/vty.c lib/workqueue.c lib/zclient.c\
					  src/main.c src/zebra_router_cmd.c

libzebra_la_CFLAGS = -I$(top_srcdir)/src \
	-I$(top_srcdir)/libs/glib-2.58.1/glib -I -Ifpm -Ilib -Isrc \
	-Izebra -DHAVE_CONFIG_H -DSYSCONFDIR=\"/etc/config/\" \
	-I$(top_srcdir)/libs/glib-2.58.1/gmodule \
	-I$(top_srcdir)/libs/glib-2.58.1/
libzebra_la_LDFLAGS = -L$(top_srcdir)/libs/glib-2.58.1/glib -L$(top_srcdir)/libs/glib-2.58.1/gmodule
libzebra_la_LIBADD = -lm -lpthread -ldl -lcrypt -lglib-2.0 -lgmodule-2.0
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign libs/zebra/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign libs/zebra/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
lib/$(am__dirstamp):
	@$(MKDIR_P) lib
	@: > lib/$(am__dirstamp)
lib/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) lib/$(DEPDIR)
	@: > lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-agentx.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-buffer.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-checksum.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-command.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-daemon.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-distribute.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-filter.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-getopt1.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-getopt.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-hash.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-if.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-if_rmap.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-jhash.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-keychain.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-linklist.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-log.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-md5.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-memory.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-memtypes.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-network.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-pid_output.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-plist.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-pqueue.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-prefix.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-privs.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-regex.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-routemap.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-sigevent.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-smux.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-snmp.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-sockopt.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-sockunion.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-str.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-stream.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-table.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-thread.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-vector.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-vty.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-workqueue.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libzebra_la-zclient.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
src/$(am__dirstamp):
	@$(MKDIR_P) src
	@: > src/$(am__dirstamp)
src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/$(DEPDIR)
	@: > src/$(DEPDIR)/$(am__dirstamp)
src/libzebra_la-main.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libzebra_la-zebra_router_cmd.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

libzebra.la: $(libzebra_la_OBJECTS) $(libzebra_la_DEPENDENCIES) $(EXTRA_libzebra_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libzebra_la_LINK)  $(libzebra_la_OBJECTS) $(libzebra_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f lib/*.$(OBJEXT)
	-rm -f lib/*.lo
	-rm -f src/*.$(OBJEXT)
	-rm -f src/*.lo

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-agentx.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-buffer.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-checksum.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-command.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-daemon.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-distribute.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-filter.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-getopt.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-getopt1.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-hash.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-if.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-if_rmap.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-jhash.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-keychain.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-linklist.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-log.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-md5.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-memory.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-memtypes.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-network.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-pid_output.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-plist.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-pqueue.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-prefix.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-privs.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-regex.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-routemap.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-sigevent.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-smux.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-snmp.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-sockopt.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-sockunion.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-str.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-stream.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-table.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-thread.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-vector.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-vty.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-workqueue.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libzebra_la-zclient.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libzebra_la-main.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libzebra_la-zebra_router_cmd.Plo@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

lib/libzebra_la-agentx.lo: lib/agentx.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-agentx.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-agentx.Tpo -c -o lib/libzebra_la-agentx.lo `test -f 'lib/agentx.c' || echo '$(srcdir)/'`lib/agentx.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-agentx.Tpo lib/$(DEPDIR)/libzebra_la-agentx.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/agentx.c' object='lib/libzebra_la-agentx.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-agentx.lo `test -f 'lib/agentx.c' || echo '$(srcdir)/'`lib/agentx.c

lib/libzebra_la-buffer.lo: lib/buffer.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-buffer.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-buffer.Tpo -c -o lib/libzebra_la-buffer.lo `test -f 'lib/buffer.c' || echo '$(srcdir)/'`lib/buffer.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-buffer.Tpo lib/$(DEPDIR)/libzebra_la-buffer.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/buffer.c' object='lib/libzebra_la-buffer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-buffer.lo `test -f 'lib/buffer.c' || echo '$(srcdir)/'`lib/buffer.c

lib/libzebra_la-checksum.lo: lib/checksum.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-checksum.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-checksum.Tpo -c -o lib/libzebra_la-checksum.lo `test -f 'lib/checksum.c' || echo '$(srcdir)/'`lib/checksum.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-checksum.Tpo lib/$(DEPDIR)/libzebra_la-checksum.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/checksum.c' object='lib/libzebra_la-checksum.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-checksum.lo `test -f 'lib/checksum.c' || echo '$(srcdir)/'`lib/checksum.c

lib/libzebra_la-command.lo: lib/command.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-command.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-command.Tpo -c -o lib/libzebra_la-command.lo `test -f 'lib/command.c' || echo '$(srcdir)/'`lib/command.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-command.Tpo lib/$(DEPDIR)/libzebra_la-command.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/command.c' object='lib/libzebra_la-command.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-command.lo `test -f 'lib/command.c' || echo '$(srcdir)/'`lib/command.c

lib/libzebra_la-daemon.lo: lib/daemon.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-daemon.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-daemon.Tpo -c -o lib/libzebra_la-daemon.lo `test -f 'lib/daemon.c' || echo '$(srcdir)/'`lib/daemon.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-daemon.Tpo lib/$(DEPDIR)/libzebra_la-daemon.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/daemon.c' object='lib/libzebra_la-daemon.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-daemon.lo `test -f 'lib/daemon.c' || echo '$(srcdir)/'`lib/daemon.c

lib/libzebra_la-distribute.lo: lib/distribute.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-distribute.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-distribute.Tpo -c -o lib/libzebra_la-distribute.lo `test -f 'lib/distribute.c' || echo '$(srcdir)/'`lib/distribute.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-distribute.Tpo lib/$(DEPDIR)/libzebra_la-distribute.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/distribute.c' object='lib/libzebra_la-distribute.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-distribute.lo `test -f 'lib/distribute.c' || echo '$(srcdir)/'`lib/distribute.c

lib/libzebra_la-filter.lo: lib/filter.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-filter.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-filter.Tpo -c -o lib/libzebra_la-filter.lo `test -f 'lib/filter.c' || echo '$(srcdir)/'`lib/filter.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-filter.Tpo lib/$(DEPDIR)/libzebra_la-filter.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/filter.c' object='lib/libzebra_la-filter.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-filter.lo `test -f 'lib/filter.c' || echo '$(srcdir)/'`lib/filter.c

lib/libzebra_la-getopt1.lo: lib/getopt1.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-getopt1.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-getopt1.Tpo -c -o lib/libzebra_la-getopt1.lo `test -f 'lib/getopt1.c' || echo '$(srcdir)/'`lib/getopt1.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-getopt1.Tpo lib/$(DEPDIR)/libzebra_la-getopt1.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/getopt1.c' object='lib/libzebra_la-getopt1.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-getopt1.lo `test -f 'lib/getopt1.c' || echo '$(srcdir)/'`lib/getopt1.c

lib/libzebra_la-getopt.lo: lib/getopt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-getopt.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-getopt.Tpo -c -o lib/libzebra_la-getopt.lo `test -f 'lib/getopt.c' || echo '$(srcdir)/'`lib/getopt.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-getopt.Tpo lib/$(DEPDIR)/libzebra_la-getopt.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/getopt.c' object='lib/libzebra_la-getopt.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-getopt.lo `test -f 'lib/getopt.c' || echo '$(srcdir)/'`lib/getopt.c

lib/libzebra_la-hash.lo: lib/hash.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-hash.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-hash.Tpo -c -o lib/libzebra_la-hash.lo `test -f 'lib/hash.c' || echo '$(srcdir)/'`lib/hash.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-hash.Tpo lib/$(DEPDIR)/libzebra_la-hash.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/hash.c' object='lib/libzebra_la-hash.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-hash.lo `test -f 'lib/hash.c' || echo '$(srcdir)/'`lib/hash.c

lib/libzebra_la-if.lo: lib/if.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-if.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-if.Tpo -c -o lib/libzebra_la-if.lo `test -f 'lib/if.c' || echo '$(srcdir)/'`lib/if.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-if.Tpo lib/$(DEPDIR)/libzebra_la-if.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/if.c' object='lib/libzebra_la-if.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-if.lo `test -f 'lib/if.c' || echo '$(srcdir)/'`lib/if.c

lib/libzebra_la-if_rmap.lo: lib/if_rmap.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-if_rmap.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-if_rmap.Tpo -c -o lib/libzebra_la-if_rmap.lo `test -f 'lib/if_rmap.c' || echo '$(srcdir)/'`lib/if_rmap.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-if_rmap.Tpo lib/$(DEPDIR)/libzebra_la-if_rmap.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/if_rmap.c' object='lib/libzebra_la-if_rmap.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-if_rmap.lo `test -f 'lib/if_rmap.c' || echo '$(srcdir)/'`lib/if_rmap.c

lib/libzebra_la-jhash.lo: lib/jhash.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-jhash.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-jhash.Tpo -c -o lib/libzebra_la-jhash.lo `test -f 'lib/jhash.c' || echo '$(srcdir)/'`lib/jhash.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-jhash.Tpo lib/$(DEPDIR)/libzebra_la-jhash.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/jhash.c' object='lib/libzebra_la-jhash.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-jhash.lo `test -f 'lib/jhash.c' || echo '$(srcdir)/'`lib/jhash.c

lib/libzebra_la-keychain.lo: lib/keychain.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-keychain.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-keychain.Tpo -c -o lib/libzebra_la-keychain.lo `test -f 'lib/keychain.c' || echo '$(srcdir)/'`lib/keychain.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-keychain.Tpo lib/$(DEPDIR)/libzebra_la-keychain.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/keychain.c' object='lib/libzebra_la-keychain.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-keychain.lo `test -f 'lib/keychain.c' || echo '$(srcdir)/'`lib/keychain.c

lib/libzebra_la-linklist.lo: lib/linklist.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-linklist.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-linklist.Tpo -c -o lib/libzebra_la-linklist.lo `test -f 'lib/linklist.c' || echo '$(srcdir)/'`lib/linklist.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-linklist.Tpo lib/$(DEPDIR)/libzebra_la-linklist.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/linklist.c' object='lib/libzebra_la-linklist.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-linklist.lo `test -f 'lib/linklist.c' || echo '$(srcdir)/'`lib/linklist.c

lib/libzebra_la-log.lo: lib/log.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-log.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-log.Tpo -c -o lib/libzebra_la-log.lo `test -f 'lib/log.c' || echo '$(srcdir)/'`lib/log.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-log.Tpo lib/$(DEPDIR)/libzebra_la-log.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/log.c' object='lib/libzebra_la-log.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-log.lo `test -f 'lib/log.c' || echo '$(srcdir)/'`lib/log.c

lib/libzebra_la-md5.lo: lib/md5.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-md5.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-md5.Tpo -c -o lib/libzebra_la-md5.lo `test -f 'lib/md5.c' || echo '$(srcdir)/'`lib/md5.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-md5.Tpo lib/$(DEPDIR)/libzebra_la-md5.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/md5.c' object='lib/libzebra_la-md5.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-md5.lo `test -f 'lib/md5.c' || echo '$(srcdir)/'`lib/md5.c

lib/libzebra_la-memory.lo: lib/memory.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-memory.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-memory.Tpo -c -o lib/libzebra_la-memory.lo `test -f 'lib/memory.c' || echo '$(srcdir)/'`lib/memory.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-memory.Tpo lib/$(DEPDIR)/libzebra_la-memory.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/memory.c' object='lib/libzebra_la-memory.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-memory.lo `test -f 'lib/memory.c' || echo '$(srcdir)/'`lib/memory.c

lib/libzebra_la-memtypes.lo: lib/memtypes.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-memtypes.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-memtypes.Tpo -c -o lib/libzebra_la-memtypes.lo `test -f 'lib/memtypes.c' || echo '$(srcdir)/'`lib/memtypes.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-memtypes.Tpo lib/$(DEPDIR)/libzebra_la-memtypes.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/memtypes.c' object='lib/libzebra_la-memtypes.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-memtypes.lo `test -f 'lib/memtypes.c' || echo '$(srcdir)/'`lib/memtypes.c

lib/libzebra_la-network.lo: lib/network.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-network.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-network.Tpo -c -o lib/libzebra_la-network.lo `test -f 'lib/network.c' || echo '$(srcdir)/'`lib/network.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-network.Tpo lib/$(DEPDIR)/libzebra_la-network.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/network.c' object='lib/libzebra_la-network.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-network.lo `test -f 'lib/network.c' || echo '$(srcdir)/'`lib/network.c

lib/libzebra_la-pid_output.lo: lib/pid_output.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-pid_output.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-pid_output.Tpo -c -o lib/libzebra_la-pid_output.lo `test -f 'lib/pid_output.c' || echo '$(srcdir)/'`lib/pid_output.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-pid_output.Tpo lib/$(DEPDIR)/libzebra_la-pid_output.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/pid_output.c' object='lib/libzebra_la-pid_output.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-pid_output.lo `test -f 'lib/pid_output.c' || echo '$(srcdir)/'`lib/pid_output.c

lib/libzebra_la-plist.lo: lib/plist.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-plist.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-plist.Tpo -c -o lib/libzebra_la-plist.lo `test -f 'lib/plist.c' || echo '$(srcdir)/'`lib/plist.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-plist.Tpo lib/$(DEPDIR)/libzebra_la-plist.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/plist.c' object='lib/libzebra_la-plist.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-plist.lo `test -f 'lib/plist.c' || echo '$(srcdir)/'`lib/plist.c

lib/libzebra_la-pqueue.lo: lib/pqueue.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-pqueue.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-pqueue.Tpo -c -o lib/libzebra_la-pqueue.lo `test -f 'lib/pqueue.c' || echo '$(srcdir)/'`lib/pqueue.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-pqueue.Tpo lib/$(DEPDIR)/libzebra_la-pqueue.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/pqueue.c' object='lib/libzebra_la-pqueue.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-pqueue.lo `test -f 'lib/pqueue.c' || echo '$(srcdir)/'`lib/pqueue.c

lib/libzebra_la-prefix.lo: lib/prefix.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-prefix.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-prefix.Tpo -c -o lib/libzebra_la-prefix.lo `test -f 'lib/prefix.c' || echo '$(srcdir)/'`lib/prefix.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-prefix.Tpo lib/$(DEPDIR)/libzebra_la-prefix.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/prefix.c' object='lib/libzebra_la-prefix.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-prefix.lo `test -f 'lib/prefix.c' || echo '$(srcdir)/'`lib/prefix.c

lib/libzebra_la-privs.lo: lib/privs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-privs.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-privs.Tpo -c -o lib/libzebra_la-privs.lo `test -f 'lib/privs.c' || echo '$(srcdir)/'`lib/privs.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-privs.Tpo lib/$(DEPDIR)/libzebra_la-privs.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/privs.c' object='lib/libzebra_la-privs.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-privs.lo `test -f 'lib/privs.c' || echo '$(srcdir)/'`lib/privs.c

lib/libzebra_la-regex.lo: lib/regex.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-regex.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-regex.Tpo -c -o lib/libzebra_la-regex.lo `test -f 'lib/regex.c' || echo '$(srcdir)/'`lib/regex.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-regex.Tpo lib/$(DEPDIR)/libzebra_la-regex.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/regex.c' object='lib/libzebra_la-regex.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-regex.lo `test -f 'lib/regex.c' || echo '$(srcdir)/'`lib/regex.c

lib/libzebra_la-routemap.lo: lib/routemap.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-routemap.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-routemap.Tpo -c -o lib/libzebra_la-routemap.lo `test -f 'lib/routemap.c' || echo '$(srcdir)/'`lib/routemap.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-routemap.Tpo lib/$(DEPDIR)/libzebra_la-routemap.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/routemap.c' object='lib/libzebra_la-routemap.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-routemap.lo `test -f 'lib/routemap.c' || echo '$(srcdir)/'`lib/routemap.c

lib/libzebra_la-sigevent.lo: lib/sigevent.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-sigevent.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-sigevent.Tpo -c -o lib/libzebra_la-sigevent.lo `test -f 'lib/sigevent.c' || echo '$(srcdir)/'`lib/sigevent.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-sigevent.Tpo lib/$(DEPDIR)/libzebra_la-sigevent.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/sigevent.c' object='lib/libzebra_la-sigevent.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-sigevent.lo `test -f 'lib/sigevent.c' || echo '$(srcdir)/'`lib/sigevent.c

lib/libzebra_la-smux.lo: lib/smux.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-smux.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-smux.Tpo -c -o lib/libzebra_la-smux.lo `test -f 'lib/smux.c' || echo '$(srcdir)/'`lib/smux.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-smux.Tpo lib/$(DEPDIR)/libzebra_la-smux.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/smux.c' object='lib/libzebra_la-smux.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-smux.lo `test -f 'lib/smux.c' || echo '$(srcdir)/'`lib/smux.c

lib/libzebra_la-snmp.lo: lib/snmp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-snmp.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-snmp.Tpo -c -o lib/libzebra_la-snmp.lo `test -f 'lib/snmp.c' || echo '$(srcdir)/'`lib/snmp.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-snmp.Tpo lib/$(DEPDIR)/libzebra_la-snmp.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/snmp.c' object='lib/libzebra_la-snmp.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-snmp.lo `test -f 'lib/snmp.c' || echo '$(srcdir)/'`lib/snmp.c

lib/libzebra_la-sockopt.lo: lib/sockopt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-sockopt.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-sockopt.Tpo -c -o lib/libzebra_la-sockopt.lo `test -f 'lib/sockopt.c' || echo '$(srcdir)/'`lib/sockopt.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-sockopt.Tpo lib/$(DEPDIR)/libzebra_la-sockopt.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/sockopt.c' object='lib/libzebra_la-sockopt.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-sockopt.lo `test -f 'lib/sockopt.c' || echo '$(srcdir)/'`lib/sockopt.c

lib/libzebra_la-sockunion.lo: lib/sockunion.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-sockunion.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-sockunion.Tpo -c -o lib/libzebra_la-sockunion.lo `test -f 'lib/sockunion.c' || echo '$(srcdir)/'`lib/sockunion.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-sockunion.Tpo lib/$(DEPDIR)/libzebra_la-sockunion.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/sockunion.c' object='lib/libzebra_la-sockunion.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-sockunion.lo `test -f 'lib/sockunion.c' || echo '$(srcdir)/'`lib/sockunion.c

lib/libzebra_la-str.lo: lib/str.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-str.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-str.Tpo -c -o lib/libzebra_la-str.lo `test -f 'lib/str.c' || echo '$(srcdir)/'`lib/str.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-str.Tpo lib/$(DEPDIR)/libzebra_la-str.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/str.c' object='lib/libzebra_la-str.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-str.lo `test -f 'lib/str.c' || echo '$(srcdir)/'`lib/str.c

lib/libzebra_la-stream.lo: lib/stream.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-stream.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-stream.Tpo -c -o lib/libzebra_la-stream.lo `test -f 'lib/stream.c' || echo '$(srcdir)/'`lib/stream.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-stream.Tpo lib/$(DEPDIR)/libzebra_la-stream.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/stream.c' object='lib/libzebra_la-stream.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-stream.lo `test -f 'lib/stream.c' || echo '$(srcdir)/'`lib/stream.c

lib/libzebra_la-table.lo: lib/table.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-table.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-table.Tpo -c -o lib/libzebra_la-table.lo `test -f 'lib/table.c' || echo '$(srcdir)/'`lib/table.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-table.Tpo lib/$(DEPDIR)/libzebra_la-table.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/table.c' object='lib/libzebra_la-table.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-table.lo `test -f 'lib/table.c' || echo '$(srcdir)/'`lib/table.c

lib/libzebra_la-thread.lo: lib/thread.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-thread.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-thread.Tpo -c -o lib/libzebra_la-thread.lo `test -f 'lib/thread.c' || echo '$(srcdir)/'`lib/thread.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-thread.Tpo lib/$(DEPDIR)/libzebra_la-thread.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/thread.c' object='lib/libzebra_la-thread.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-thread.lo `test -f 'lib/thread.c' || echo '$(srcdir)/'`lib/thread.c

lib/libzebra_la-vector.lo: lib/vector.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-vector.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-vector.Tpo -c -o lib/libzebra_la-vector.lo `test -f 'lib/vector.c' || echo '$(srcdir)/'`lib/vector.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-vector.Tpo lib/$(DEPDIR)/libzebra_la-vector.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/vector.c' object='lib/libzebra_la-vector.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-vector.lo `test -f 'lib/vector.c' || echo '$(srcdir)/'`lib/vector.c

lib/libzebra_la-vty.lo: lib/vty.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-vty.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-vty.Tpo -c -o lib/libzebra_la-vty.lo `test -f 'lib/vty.c' || echo '$(srcdir)/'`lib/vty.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-vty.Tpo lib/$(DEPDIR)/libzebra_la-vty.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/vty.c' object='lib/libzebra_la-vty.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-vty.lo `test -f 'lib/vty.c' || echo '$(srcdir)/'`lib/vty.c

lib/libzebra_la-workqueue.lo: lib/workqueue.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-workqueue.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-workqueue.Tpo -c -o lib/libzebra_la-workqueue.lo `test -f 'lib/workqueue.c' || echo '$(srcdir)/'`lib/workqueue.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-workqueue.Tpo lib/$(DEPDIR)/libzebra_la-workqueue.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/workqueue.c' object='lib/libzebra_la-workqueue.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-workqueue.lo `test -f 'lib/workqueue.c' || echo '$(srcdir)/'`lib/workqueue.c

lib/libzebra_la-zclient.lo: lib/zclient.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT lib/libzebra_la-zclient.lo -MD -MP -MF lib/$(DEPDIR)/libzebra_la-zclient.Tpo -c -o lib/libzebra_la-zclient.lo `test -f 'lib/zclient.c' || echo '$(srcdir)/'`lib/zclient.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libzebra_la-zclient.Tpo lib/$(DEPDIR)/libzebra_la-zclient.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lib/zclient.c' object='lib/libzebra_la-zclient.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o lib/libzebra_la-zclient.lo `test -f 'lib/zclient.c' || echo '$(srcdir)/'`lib/zclient.c

src/libzebra_la-main.lo: src/main.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT src/libzebra_la-main.lo -MD -MP -MF src/$(DEPDIR)/libzebra_la-main.Tpo -c -o src/libzebra_la-main.lo `test -f 'src/main.c' || echo '$(srcdir)/'`src/main.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libzebra_la-main.Tpo src/$(DEPDIR)/libzebra_la-main.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/main.c' object='src/libzebra_la-main.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o src/libzebra_la-main.lo `test -f 'src/main.c' || echo '$(srcdir)/'`src/main.c

src/libzebra_la-zebra_router_cmd.lo: src/zebra_router_cmd.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT src/libzebra_la-zebra_router_cmd.lo -MD -MP -MF src/$(DEPDIR)/libzebra_la-zebra_router_cmd.Tpo -c -o src/libzebra_la-zebra_router_cmd.lo `test -f 'src/zebra_router_cmd.c' || echo '$(srcdir)/'`src/zebra_router_cmd.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libzebra_la-zebra_router_cmd.Tpo src/$(DEPDIR)/libzebra_la-zebra_router_cmd.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/zebra_router_cmd.c' object='src/libzebra_la-zebra_router_cmd.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o src/libzebra_la-zebra_router_cmd.lo `test -f 'src/zebra_router_cmd.c' || echo '$(srcdir)/'`src/zebra_router_cmd.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf lib/.libs lib/_libs
	-rm -rf src/.libs src/_libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f lib/$(DEPDIR)/$(am__dirstamp)
	-rm -f lib/$(am__dirstamp)
	-rm -f src/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
		-rm -f lib/$(DEPDIR)/libzebra_la-agentx.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-buffer.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-checksum.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-command.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-daemon.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-distribute.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-filter.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-getopt.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-getopt1.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-hash.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-if.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-if_rmap.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-jhash.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-keychain.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-linklist.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-log.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-md5.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-memory.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-memtypes.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-network.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-pid_output.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-plist.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-pqueue.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-prefix.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-privs.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-regex.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-routemap.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-sigevent.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-smux.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-snmp.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-sockopt.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-sockunion.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-str.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-stream.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-table.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-thread.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-vector.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-vty.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-workqueue.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-zclient.Plo
	-rm -f src/$(DEPDIR)/libzebra_la-main.Plo
	-rm -f src/$(DEPDIR)/libzebra_la-zebra_router_cmd.Plo
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f lib/$(DEPDIR)/libzebra_la-agentx.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-buffer.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-checksum.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-command.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-daemon.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-distribute.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-filter.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-getopt.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-getopt1.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-hash.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-if.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-if_rmap.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-jhash.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-keychain.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-linklist.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-log.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-md5.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-memory.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-memtypes.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-network.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-pid_output.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-plist.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-pqueue.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-prefix.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-privs.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-regex.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-routemap.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-sigevent.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-smux.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-snmp.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-sockopt.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-sockunion.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-str.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-stream.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-table.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-thread.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-vector.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-vty.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-workqueue.Plo
	-rm -f lib/$(DEPDIR)/libzebra_la-zclient.Plo
	-rm -f src/$(DEPDIR)/libzebra_la-main.Plo
	-rm -f src/$(DEPDIR)/libzebra_la-zebra_router_cmd.Plo
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-generic clean-libtool clean-noinstLTLIBRARIES \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-includeHEADERS

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
